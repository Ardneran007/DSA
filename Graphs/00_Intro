whenver we  have random connection to Nodes we use graph.it allows random connection to anybody
Representation-
It is represented by a pair of sets
G(V,E)    V={v1,v2,v3,v4,v5}   E={(v1,v2),( v1,v3),(v2,v4),( v3,v2),(v3,v5),( v4,v5)}
------------------------------------------------------------------------------------------------
UnDirected graph

The edge (v1,v2) is unordered pair it can also be (v2,v1) ie we can go from v1 to v2 and viceversa
eg->social network(group of friends)
a.Degree of vertex->No of edges going through it
properties.
1.Sum of degrees->2*|E|
3.Maximum no of edges-> (|V||V-1|)/2  (Not consedering possibility of self loops)
O___O
 \ / such kind of UnDirected graph is also called as complete graph
  O 
------------------------------------------------------------------------------------------------
Directed graph

The edge (v1,v2) is an ordered pair it is not equivalent to (v2,v1)
eg-www(the vertices means pages of www ,and edge means connection bw two pages)
a.Degree-
    1.Indegree->no of edges coming through it
    2.Outdegree->No of edges going out of it
properties.
1.sum of indegrees->  |E|  No of edges
2.sum of outdegrees-> |E| No of edges
3.Maximum no of edges-> |V||V-1|  (Not consedering possibility of self loops)
O<===>O
 \\ //
   O 
--------------------------------------------------------------------------------------------------
V1______V3
|        | \    
|        | V5
|        | /
V2______V4  

Walk-A sequence of vertices that we get by following edges on the graph {Path}
eg->v1,v2,v4,v2

Path-Special walk with no repetion of vertices allowed{Simple path}
eg->v1,v2,v4

Cyclic->There exists a walk that begin and end with same vertex
O___O
 \ / 
  O 

--------------------------------------------------------------------------------------------------
Weighted graphs->weights assigned to edges
eg->a graph of road network weight is distance b/w the cities

V1__10___V3
|        | \5    
40       40 V5
|        | /5
V2__50__V4  



///TBD->ALL PAIR SHORTEST PATH ALGORITHM